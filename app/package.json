{
  "name": "app",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "build": "ts-node src/generate-empty-metadata.ts && nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "ts-node src/generate-empty-metadata.ts && nest start",
    "start:dev": "nest start -w",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "docs": "compodoc -p tsconfig.json -d documentation -s",
    "prisma-seed:max": "ts-node prisma/seed.ts",
    "prisma-seed:po": "ts-node prisma/seed-po.ts",
    "prisma-seed": "ts-node prisma/seed.ts && ts-node prisma/seed-po.ts",
    "test-node-async-01": "ts-node prisma/seeds/_tests-node-js-async/01-run-scripts-async-in-series/01-run-scripts-async-in-series.ts",
    "test-node-async-02": "ts-node prisma/seeds/_tests-node-js-async/02-run-scripts-async-in-series/02-run-scripts-async-in-series.ts",
    "test-node-async-03": "ts-node prisma/seeds/_tests-node-js-async/03-run-scripts-async-in-series/03-run-scripts-async-in-series.ts",
    "test-node-async-04": "ts-node prisma/seeds/_tests-node-js-async/04-run-scripts-async-in-series-clean/04-run-scripts-async-in-series-clean.ts",
    "test-node-async-05": "ts-node prisma/seeds/_tests-node-js-async/05-run-scripts-async-in-series-w-errors-management/05-run-scripts-async-in-series-w-errors-management.ts",
    "prisma-seed:generated-cpt": "ts-node prisma/seeds/counter/run-gen-cpts.ts",
    "prisma-seed:generated-resources": "ts-node prisma/seeds/resource/run-gen-resources.ts",
    "reset-bdd": "bun i && rm -Rf prisma/migrations && docker-compose -f docker-compose-database-postgresql.yml -p 'cronexia-gta-app' down && docker compose -f docker-compose-database-postgresql.yml rm -fsv && docker volume prune -af && docker-compose -f docker-compose-database-postgresql.yml -p 'cronexia-gta-app' up -d && sleep 1 && bun prisma migrate dev --name \"init\" && bun prisma db seed",
    "reset-bdd-sans-seeds": "bun i && rm -Rf prisma/migrations && docker-compose -f docker-compose-database-postgresql.yml -p 'cronexia-gta-app' down && docker compose -f docker-compose-database-postgresql.yml rm -fsv && docker volume prune -af && docker-compose -f docker-compose-database-postgresql.yml -p 'cronexia-gta-app' up -d && sleep 1 && bun prisma migrate dev --name \"init\"",
    "reset-bdd-seed-po": "bun i && rm -Rf prisma/migrations && docker-compose -f docker-compose-database-postgresql.yml -p 'cronexia-gta-app' down && docker compose -f docker-compose-database-postgresql.yml rm -fsv && docker volume prune -af && docker-compose -f docker-compose-database-postgresql.yml -p 'cronexia-gta-app' up -d && sleep 1 && bun prisma migrate dev --name \"init\" && ts-node prisma/seed-po.ts",
    "reset-eof-to-lf": "git stash && git config core.autocrlf false && git rm --cached -r . && git reset --hard && git stash apply",
    "set-rights-for-docker-local-volumes-for-bdd": "sudo chown -R 5050:5050 ./docker/volumes-bind/pgadmin/var/lib/pgadmin && sudo chown -R 5050:5050 ./docker/volumes-bind/pgadmin/config/pgadmin4/ && sudo chown -R 5050:5050 ./docker/volumes-bind/pgadmin/home",
    "start-with-previous-bdd": "bun i && docker-compose -f docker-compose-database-postgresql.yml -p 'cronexia-gta-app' up -d",
    "get-pgadmin-backup-to-local-machine": "sudo cp -R docker/volumes-bind/pgadmin/home/max_cronexia.com/. docker/pgadmin/_backups && sudo chmod -R 777 docker/pgadmin/_backups"
  },
  "dependencies": {
    "-": "^0.0.1",
    "@bull-board/api": "^6.7.1",
    "@bull-board/fastify": "5.23.0",
    "@bull-board/nestjs": "^6.7.1",
    "@fastify/compress": "^6.5.0",
    "@fastify/swagger-ui": "^2.1.0",
    "@mercuriusjs/gateway": "^2.2.0",
    "@nestjs/bullmq": "^10.2.3",
    "@nestjs/cache-manager": "^2.3.0",
    "@nestjs/common": "^10.4.15",
    "@nestjs/config": "^3.3.0",
    "@nestjs/core": "^10.4.15",
    "@nestjs/graphql": "^12.2.2",
    "@nestjs/jwt": "^10.2.0",
    "@nestjs/mercurius": "^12.2.2",
    "@nestjs/passport": "^10.0.3",
    "@nestjs/platform-fastify": "^10.4.15",
    "@nestjs/swagger": "^7.4.2",
    "@prisma/client": "^6.2.1",
    "bcrypt": "^5.1.1",
    "bullmq": "^5.35.0",
    "cache-manager": "^5.7.6",
    "cache-manager-redis-yet": "^5.1.5",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.1",
    "g": "^2.0.1",
    "graphql": "^16.10.0",
    "graphql-scalars": "^1.24.0",
    "joi": "^17.13.3",
    "mercurius": "^13.4.1",
    "nestjs-prisma": "^0.23.0",
    "passport-jwt": "^4.0.1",
    "pg": "^8.13.1",
    "redis-cli": "^2.1.2",
    "reflect-metadata": "^0.1.14",
    "rxjs": "^7.8.1",
    "uuid": "^10.0.0"
  },
  "devDependencies": {
    "@compodoc/compodoc": "^1.1.26",
    "@nestjs/cli": "^10.4.9",
    "@nestjs/schematics": "^10.2.3",
    "@nestjs/testing": "^10.4.15",
    "@swc/cli": "^0.1.65",
    "@swc/core": "^1.10.9",
    "@swc/jest": "^0.2.37",
    "@types/express": "^4.17.21",
    "@types/jest": "^29.5.14",
    "@types/node": "^20.17.14",
    "@types/passport-jwt": "^4.0.1",
    "@types/supertest": "^2.0.16",
    "@typescript-eslint/eslint-plugin": "^6.21.0",
    "@typescript-eslint/parser": "^6.21.0",
    "eslint": "^8.57.1",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-prettier": "^5.2.3",
    "jest": "^29.7.0",
    "prettier": "^3.4.2",
    "prisma": "^6.2.1",
    "prisma-docs-generator": "^0.8.0",
    "source-map-support": "^0.5.21",
    "supertest": "^6.3.4",
    "ts-jest": "^29.2.5",
    "ts-loader": "^9.5.2",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.7.3"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s?$": ["@swc/jest"]
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  },
  "prisma": {
    "seed": "ts-node prisma/seed.ts"
  },
  "compodoc": {
    "port": 8042
  }
}
